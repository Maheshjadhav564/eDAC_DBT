
mysql> create database customer;
Query OK, 1 row affected (0.22 sec)

mysql> use customer;
Database changed
mysql> create table suppliers(
    -> supplierID int,
    -> Name varchar(15),
    -> Phone char(8),
    -> PRIMARY KEY(supplierID));
Query OK, 0 rows affected (2.00 sec)

mysql> desc suppliers;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| supplierID | int         | NO   | PRI | NULL    |       |
| Name       | varchar(15) | YES  |     | NULL    |       |
| Phone      | char(8)     | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> create table products(
    -> productID int,
    -> productCode char(3),
    -> Name varchar(30),
    -> Quantity int,
    -> Price decimal(10,2),
    -> supplierID int references suppliers(supplierID),
    -> PRIMARY KEY(productID));
Query OK, 0 rows affected (0.38 sec)

mysql> desc products;
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| productID   | int           | NO   | PRI | NULL    |       |
| productCode | char(3)       | YES  |     | NULL    |       |
| Name        | varchar(30)   | YES  |     | NULL    |       |
| Quantity    | int           | YES  |     | NULL    |       |
| Price       | decimal(10,2) | YES  |     | NULL    |       |
| supplierID  | int           | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
6 rows in set (0.13 sec)

mysql> ALTER TABLE products ADD FOREIGN KEY(supplierID) references suppliers(supplierID);
Query OK, 0 rows affected (3.35 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc products;
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| productID   | int           | NO   | PRI | NULL    |       |
| productCode | char(3)       | YES  |     | NULL    |       |
| Name        | varchar(30)   | YES  |     | NULL    |       |
| Quantity    | int           | YES  |     | NULL    |       |
| Price       | decimal(10,2) | YES  |     | NULL    |       |
| supplierID  | int           | YES  | MUL | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
6 rows in set (0.07 sec)

mysql> insert into suppliers values(501,"ABC TRADERS","88881111");
Query OK, 1 row affected (0.11 sec)

mysql> insert into suppliers values(502,"XYZ COMPANY","88882222");
Query OK, 1 row affected (0.18 sec)

mysql> insert into suppliers values(503,"QQ CORP","88883333");
Query OK, 1 row affected (0.09 sec)

mysql> select *from suppliers;
+------------+-------------+----------+
| supplierID | Name        | Phone    |
+------------+-------------+----------+
|        501 | ABC TRADERS | 88881111 |
|        502 | XYZ COMPANY | 88882222 |
|        503 | QQ CORP     | 88883333 |
+------------+-------------+----------+
3 rows in set (0.00 sec)

mysql> insert into products values(2001,"PEC","Pencil 3B",500,0.52,501);
Query OK, 1 row affected (0.14 sec)

mysql> insert into products values(2002,"PEC","Pencil 4B",200,0.62,501);
Query OK, 1 row affected (0.14 sec)

mysql> insert into products values(2003,"PEC","Pencil 5B",100,0.73,501);
Query OK, 1 row affected (0.14 sec)

mysql> insert into products values(2004,"PEC","Pencil 6B",500,0.47,502);
Query OK, 1 row affected (0.16 sec)

mysql> select*from products;
+-----------+-------------+-----------+----------+-------+------------+
| productID | productCode | Name      | Quantity | Price | supplierID |
+-----------+-------------+-----------+----------+-------+------------+
|      2001 | PEC         | Pencil 3B |      500 |  0.52 |        501 |
|      2002 | PEC         | Pencil 4B |      200 |  0.62 |        501 |
|      2003 | PEC         | Pencil 5B |      100 |  0.73 |        501 |
|      2004 | PEC         | Pencil 6B |      500 |  0.47 |        502 |
+-----------+-------------+-----------+----------+-------+------------+
4 rows in set (0.00 sec)

a.	List the employee whose salary between 1200 and 1600.

		mysql> select*from emp where sal between 1200 and 1600;
+-------+--------+----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+----------+------+------------+---------+---------+--------+
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+----------+------+------------+---------+---------+--------+
5 rows in set (0.00 sec)


b.	List the employee where job title is not CLERK, SALESMAN.

			mysql> select*from emp where sal between 1200 and 1600;
+-------+--------+----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+----------+------+------------+---------+---------+--------+
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+----------+------+------------+---------+---------+--------+
5 rows in set (0.00 sec)


c.	List the details of employee whose name has second letter as D.

		mysql> select*from emp where ename like '_D%';
+-------+-------+-------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB   | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+-------+------+------------+---------+------+--------+
|  7876 | ADAMS | CLERK | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
+-------+-------+-------+------+------------+---------+------+--------+
1 row in set (0.00 sec)

d.	Select the dept details where deptno is not 10. 

		mysql> select deptno from emp where deptno not in(10);
+--------+
| deptno |
+--------+
|     20 |
|     30 |
|     30 |
|     20 |
|     30 |
|     30 |
|     20 |
|     30 |
|     20 |
|     30 |
|     20 |
+--------+
11 rows in set (0.00 sec)

e.  Select the name and deptno of employee whose name starting with ‘J’ or ‘S’ and not in dept 20 or 30.

		mysql> select ename,deptno from emp where  ename like ("J%" || "S%") and (deptno!=20 || deptno!=30);
		Empty set, 3 warnings (0.00 sec)

f.	Select the dept having 5 characters in name ending with S.

		mysql> select ename from emp where length(ename)=5 and ename like "%S";
+-------+
| ename |
+-------+
| JONES |
| ADAMS |
| JAMES |
+-------+
3 rows in set (0.00 sec)


g.	List all aggregates on salary columns for each department excluding dept 10.

		mysql> select sal,deptno from emp where deptno!=10;
+---------+--------+
| sal     | deptno |
+---------+--------+
|  800.00 |     20 |
| 1600.00 |     30 |
| 1250.00 |     30 |
| 2975.00 |     20 |
| 1250.00 |     30 |
| 2850.00 |     30 |
| 3000.00 |     20 |
| 1500.00 |     30 |
| 1100.00 |     20 |
|  950.00 |     30 |
| 3000.00 |     20 |
+---------+--------+
11 rows in set (0.00 sec)

h.	List departments where number of employees are more than 4.

		mysql> select deptno,count(*) from emp group by deptno having count(*)>4;
+--------+----------+
| deptno | count(*) |
+--------+----------+
|     20 |        5 |
|     30 |        6 |
+--------+----------+
2 rows in set (0.00 sec)




i.	Display jobs with average salary greater than 2000. Order on average salary.

		mysql> select job,avg(sal) from emp group by ename having avg(sal) > 2000 order by avg(sal);
+-----------+-------------+
| job       | avg(sal)    |
+-----------+-------------+
| MANAGER   | 2450.000000 |
| MANAGER   | 2850.000000 |
| MANAGER   | 2975.000000 |
| ANALYST   | 3000.000000 |
| ANALYST   | 3000.000000 |
| PRESIDENT | 5000.000000 |
+-----------+-------------+
6 rows in set (0.00 sec)

j.	List how many employees are their under each manager.

		mysql> select mgr as MAnager_Id,count(empno) as emp_count from emp where mgr is not null group by mgr;
+------------+-----------+
| MAnager_Id | emp_count |
+------------+-----------+
|       7902 |         1 |
|       7698 |         5 |
|       7839 |         3 |
|       7566 |         2 |
|       7788 |         1 |
|       7782 |         1 |
+------------+-----------+
6 rows in set (0.00 sec)

k.	Display the manager number and the salary of the lowest paid employee for that manager. Sort the output in descending order of salary.

		mysql> select mgr,min(sal) from emp where mgr is not null group by mgr order by min(sal) desc;
+------+----------+
| mgr  | min(sal) |
+------+----------+
| 7566 |  3000.00 |
| 7839 |  2450.00 |
| 7782 |  1300.00 |
| 7788 |  1100.00 |
| 7698 |   950.00 |
| 7902 |   800.00 |
+------+----------+
6 rows in set (0.06 sec)

